@import "config";
//all variables and mixins moved to sass config file
@import "menu";

* {
  box-sizing: border-box;
}

body {
  @include background;
  background: $primary-color;
  // using color func in config to make sure text changes to black if bckgrnd gets set to a light color
  color: set-text-color($primary-color);
  height: 100%;
  margin: 0;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.5;
}

//headings
h1,
h2,
h3 {
  margin: 0;
  font-weight: 400;

  &.lg-heading {
    font-size: 6rem;
  }
  &.sm-heading {
    margin-bottom: 2rem;
    padding: 0.2rem 1rem;
    background: rgba(lighten($primary-color, 2), 0.5);
  }
}

a {
  color: #fff;
  text-decoration: none;
}

header {
  position: fixed;
  z-index: 2;
  width: 100%;
}

.text-secondary {
  color: $secondary-color;
}

.text-home-color {
  color: $home-name-color;
}

main {
  padding: 4rem;
  //height: 100%;
  // Create a sticky footer
  min-height: calc(100vh - 60px);

  .icons {
    margin-top: 1rem;

    a {
      padding: 0.4rem;

      &:hover {
        color: $secondary-color;
        @include easeOut();
      }
    }
  }

  &#home {
    overflow: hidden;
    h1 {
      margin-top: 20vh;
    }
  }
}
//transition parameters -> what you want to transition (could be color, for instance), speed to transition, way that it transitions

// About me
.about-info {
  display: grid;
  grid-gap: 30px;
  grid-template-areas:
    "bioimage bio bio"
    "job1 job2 job3";
  grid-template-columns: repeat(3, 1fr);

  .bio-image {
    grid-area: bioimage;
    margin: auto;
    border-radius: 50%;
    border: $secondary-color 3px solid;
  }

  .bio {
    grid-area: bio;
    font-size: 1.5rem;
  }

  .job-1 {
    grid-area: job1;
  }
  .job-2 {
    grid-area: job2;
  }
  .job-3 {
    grid-area: job3;
  }

  // Add backgrounds to each of the 3 job columns
  .job {
    background: lighten($primary-color, 5);
    padding: 0.5rem;
    border-bottom: $secondary-color 5px solid;
  }
}

// Work/Projects
.projects {
  display: grid;

  grid-gap: 30px;
  grid-template-areas:
    "item1 item1 item1"
    "item2 item2 item2"
    "item3 item3 item3"
    "item4 item4 item4";

  grid-template-columns: repeat(3, 1fr);
  // grid-gap: 0.7rem;

  // //by default make 3 images (fractionals) across
  // grid-template-rows: repeat(1, 1fr);

  .item1 {
    grid-area: item1;
    grid-column-start: 1;
    grid-column-end: 4;
  }

  .item2 {
    grid-area: item2;
    grid-column-start: 1;
    grid-column-end: 4;
  }

  .item3 {
    grid-area: item3;
    grid-column-start: 1;
    grid-column-end: 4;
  }

  .item4 {
    grid-area: item4;
    grid-column-start: 1;
    grid-column-end: 4;
  }

  img {
    width: 25%;
    border: 3px #fff solid;

    &:hover {
      opacity: 0.5;
      border-color: $secondary-color;
      @include easeOut;
    }
  }

  #tech {
    font-weight: bold;
    font-size: small;
  }
}

// Contact Page
.boxes {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: center;
  margin-top: 1rem;

  div {
    font-size: 2rem;
    border: 3px #fff solid;
    padding: 1.5rem 2.5rem;
    margin-bottom: 3rem;
    @include easeOut;

    &:hover {
      //padding: 0.5rem 1.5rem;
      background: $secondary-color;
      color: set-text-color($secondary-color);
      span {
        color: set-text-color($secondary-color);
      }
    }
  }
}

// Button Styles
.btn {
  display: block;
  padding: 0.5rem 1rem;
  border: 0;
  margin-bottom: 0.3rem;

  &:hover {
    background: $secondary-color;
    color: set-text-color($secondary-color);
  }
}
// Now can extend the btn class props set above to these classes that actually exist in the work.html
.btn-dark {
  @extend .btn;
  background: darken($primary-color, 50);
  color: #fff;
}

.btn-light {
  @extend .btn;
  background: lighten($primary-color, 50);
  color: #333;
}

#main-footer {
  text-align: center;
  padding: 1rem;
  background: darken($primary-color, 10);
  color: set-text-color($primary-color);
  height: 60px;
}

// Needs to be at the bottom so that media queries load after initial CSS
@import "mobile";
